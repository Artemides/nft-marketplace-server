/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { NFTMarket, NFTMarketInterface } from "../../contracts/NFTMarket";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NFTMarket__InsufficientFunds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "NFTMarket__InsufficientPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "NFTMarket__NftAlreadyListed",
    type: "error",
  },
  {
    inputs: [],
    name: "NFTMarket__NftUnauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "NFTMarket__NoNftOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NFTMarket__PriceMustBeAboveZero",
    type: "error",
  },
  {
    inputs: [],
    name: "NFTMarket__SelfPurchase",
    type: "error",
  },
  {
    inputs: [],
    name: "NFTMarket__Unlisted",
    type: "error",
  },
  {
    inputs: [],
    name: "NFTMarket__Withdraw",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "NFTListenOn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "NFTPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "NFTPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NFTUnlisted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getNft",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct NFTMarket.MarketNft",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "listNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "purchaseNft",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "unlistNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "updateNftPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060016000819055506118d6806100286000396000f3fe6080604052600436106100705760003560e01c80635fd8c7101161004e5780635fd8c710146100f7578063634d0d501461010e57806370a0823114610137578063c922b17c1461017457610070565b80631c6932b61461007557806354e6448e146100b25780635a0b17b0146100db575b600080fd5b34801561008157600080fd5b5061009c600480360381019061009791906113af565b61019d565b6040516100a9919061143c565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d491906113af565b610268565b005b6100f560048036038101906100f091906113af565b61046b565b005b34801561010357600080fd5b5061010c6107dd565b005b34801561011a57600080fd5b5061013560048036038101906101309190611457565b61096c565b005b34801561014357600080fd5b5061015e600480360381019061015991906114aa565b610b94565b60405161016b91906114e6565b60405180910390f35b34801561018057600080fd5b5061019b60048036038101906101969190611457565b610bdd565b005b6101a56112e6565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b818160008273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016102a591906114e6565b602060405180830381865afa1580156102c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e69190611516565b90506102f0610eb2565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610354576040517fbf9ba41500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61035e8585610eba565b610394576040517fe5c8907d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550508473ffffffffffffffffffffffffffffffffffffffff167f8a7922f72dc2a50a632acdde12b7d222aefa2fdb7f3ca1364b419734569d0e808560405161045c91906114e6565b60405180910390a25050505050565b6104758282610eba565b6104ab576040517fe5c8907d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050610572610eb2565b73ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16036105da576040517fe1b973e700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3481600001511461062a57828282600001516040517fa9c4735e00000000000000000000000000000000000000000000000000000000815260040161062193929190611552565b60405180910390fd5b806000015160026000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461068191906115b8565b92505081905550600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550508273ffffffffffffffffffffffffffffffffffffffff166342842e0e8260200151610733610eb2565b856040518463ffffffff1660e01b8152600401610752939291906115ec565b600060405180830381600087803b15801561076c57600080fd5b505af1158015610780573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff167fa6d32bfcc7cd31e4d5ee7adeef7edd500cab0e64b4a494de4f832d41fd70f56d8383600001516040516107d0929190611623565b60405180910390a2505050565b6107e5610fc8565b6000600260006107f3610eb2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161086a576040517f9bb7977a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060026000610878610eb2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006108c0610eb2565b73ffffffffffffffffffffffffffffffffffffffff16826040516108e39061167d565b60006040518083038185875af1925050503d8060008114610920576040519150601f19603f3d011682016040523d82523d6000602084013e610925565b606091505b5050905080610960576040517fc3a8bafb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505061096a611017565b565b828260008273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016109a991906114e6565b602060405180830381865afa1580156109c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ea9190611516565b90506109f4610eb2565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a58576040517fbf9ba41500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a628686610eba565b610a98576040517fe5c8907d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008411610ad2576040517fb4795a5600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002090506000816000015490508582600001819055508773ffffffffffffffffffffffffffffffffffffffff167f31efc4cdbdb9bf723bf903afc8e493b63b6de67a8e3d0c0418217ef8e083d044888389604051610b8293929190611692565b60405180910390a25050505050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b828260008273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401610c1a91906114e6565b602060405180830381865afa158015610c37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5b9190611516565b9050610c65610eb2565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cc9576040517fbf9ba41500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cd38686610eba565b15610d0a576040517fef4242f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008411610d44576040517fb4795a5600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d4e8686611021565b610d84576040517f796c45de00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060400160405280858152602001610d9d610eb2565b73ffffffffffffffffffffffffffffffffffffffff16815250600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008781526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508573ffffffffffffffffffffffffffffffffffffffff167f75fa0d74d4b9780f85ebff84d34001290dec33dcbea44b2b97e2bb7e24909b218686604051610ea2929190611623565b60405180910390a2505050505050565b600033905090565b600080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1614158015610fbf575060008160000151115b91505092915050565b60026000540361100d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100490611726565b60405180910390fd5b6002600081905550565b6001600081905550565b60008083905060003073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1663081812fc866040518263ffffffff1660e01b815260040161107991906114e6565b602060405180830381865afa158015611096573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ba9190611516565b73ffffffffffffffffffffffffffffffffffffffff1614905060008273ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b815260040161110e91906114e6565b602060405180830381865afa15801561112b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114f9190611516565b905060008373ffffffffffffffffffffffffffffffffffffffff1663e985e9c583306040518363ffffffff1660e01b815260040161118e929190611746565b602060405180830381865afa1580156111ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111cf91906117a7565b90506112116040518060400160405280600381526020017f3e3e3e00000000000000000000000000000000000000000000000000000000008152508483611226565b828061121a5750805b94505050505092915050565b6112c083838360405160240161123e93929190611862565b6040516020818303038152906040527f850b7ad6000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112c5565b505050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113468261131b565b9050919050565b6113568161133b565b811461136157600080fd5b50565b6000813590506113738161134d565b92915050565b6000819050919050565b61138c81611379565b811461139757600080fd5b50565b6000813590506113a981611383565b92915050565b600080604083850312156113c6576113c5611316565b5b60006113d485828601611364565b92505060206113e58582860161139a565b9150509250929050565b6113f881611379565b82525050565b6114078161133b565b82525050565b60408201600082015161142360008501826113ef565b50602082015161143660208501826113fe565b50505050565b6000604082019050611451600083018461140d565b92915050565b6000806000606084860312156114705761146f611316565b5b600061147e86828701611364565b935050602061148f8682870161139a565b92505060406114a08682870161139a565b9150509250925092565b6000602082840312156114c0576114bf611316565b5b60006114ce84828501611364565b91505092915050565b6114e081611379565b82525050565b60006020820190506114fb60008301846114d7565b92915050565b6000815190506115108161134d565b92915050565b60006020828403121561152c5761152b611316565b5b600061153a84828501611501565b91505092915050565b61154c8161133b565b82525050565b60006060820190506115676000830186611543565b61157460208301856114d7565b61158160408301846114d7565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115c382611379565b91506115ce83611379565b92508282019050808211156115e6576115e5611589565b5b92915050565b60006060820190506116016000830186611543565b61160e6020830185611543565b61161b60408301846114d7565b949350505050565b600060408201905061163860008301856114d7565b61164560208301846114d7565b9392505050565b600081905092915050565b50565b600061166760008361164c565b915061167282611657565b600082019050919050565b60006116888261165a565b9150819050919050565b60006060820190506116a760008301866114d7565b6116b460208301856114d7565b6116c160408301846114d7565b949350505050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611710601f836116c9565b915061171b826116da565b602082019050919050565b6000602082019050818103600083015261173f81611703565b9050919050565b600060408201905061175b6000830185611543565b6117686020830184611543565b9392505050565b60008115159050919050565b6117848161176f565b811461178f57600080fd5b50565b6000815190506117a18161177b565b92915050565b6000602082840312156117bd576117bc611316565b5b60006117cb84828501611792565b91505092915050565b600081519050919050565b60005b838110156117fd5780820151818401526020810190506117e2565b60008484015250505050565b6000601f19601f8301169050919050565b6000611825826117d4565b61182f81856116c9565b935061183f8185602086016117df565b61184881611809565b840191505092915050565b61185c8161176f565b82525050565b6000606082019050818103600083015261187c818661181a565b905061188b6020830185611853565b6118986040830184611853565b94935050505056fea264697066735822122083a54e9b3697c896f6b9e9d2bf1c3f0101abbb3865686f85e1d574fb124e70a964736f6c63430008120033";

type NFTMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarket__factory extends ContractFactory {
  constructor(...args: NFTMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NFTMarket & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NFTMarket__factory {
    return super.connect(runner) as NFTMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketInterface {
    return new Interface(_abi) as NFTMarketInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NFTMarket {
    return new Contract(address, _abi, runner) as unknown as NFTMarket;
  }
}
